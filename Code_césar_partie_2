int key = 6;
int operation=-1;
void setup()
{
    Serial.begin(9600);
}

void loop()
{
  	String charkey="";
  	String mot="";
  	int virgule=0;
  	char readChar = 0; // caractère à lire
	int buff=Serial.available();
  	String message="";
  	char choix=0;//variable qui va contenir le choix
  	while(buff > 0) // tant qu'il reste des caractères dans le buffer
    {
      readChar=Serial.read();
      message+=readChar;
      delay(10);
	  buff=Serial.available();
      
    }
  	if(message!="")
    {
      if(message[0]!='1' && message[0]!='0')//Vérifie que l'opération selectionné est valide
      {
        Serial.print("Valeur invalide veuillez renseigner une valeur vallant 0 pour chiffrer ou 1 pou dechiffrer. ");
      }
      operation=message[0];//met l'opération choisie dans une variable
      virgule=message.indexOf(',',2);
      charkey=message.substring(2,virgule-1);
      for(int i=1; i<charkey.length();i++)//converti les caractère allant de 0 à 9 en entier
      {
        key+=(charkey[i]-30)*pow(10,charkey.length()-(1+i));
      }
      mot=message.substring(virgule+1,message.length());
      if(operation=='1')
      {
        dechiffrement(mot);
      }
      if(operation=='0')
      {
        chiffrement(mot);
      } 
    }
}

void chiffrement(String mot)
{
    char readChar = 0; // caractère à lire

    int buff = mot.length();
    int lettre=0;

    while(buff > 0) // tant qu'il reste des caractères dans le buffer
    {
        readChar = mot[lettre]; // lecture du caractère
      	int charint = readChar+key;
      	while (charint>122)
        {
          charint=charint-122;
          charint=charint+96;
        }
      	readChar=charint;
        Serial.print(readChar); // envoi du caractère
        buff = buff-1; // mise à jour du nombre de caratères restant
      	lettre=lettre+1;
    }
}


void dechiffrement(String mot)
{
	char readChar = 0; // caractère à lire

    int buff = mot.length();
  	int lettre =0;

    while(buff > 0) // tant qu'il reste des caractères dans le buffer
    {
        readChar = mot[lettre]; // lecture du caractère
      	int charint = readChar-key;
      	while (charint<97)
        {
          charint=charint-97;
          charint=charint+123;
        }
      	readChar=charint;
        Serial.print(readChar); // envoi du caractère
        buff = buff-1; // mise à jour du nombre de caratères restant
      	lettre=lettre+1;
    }
}



